[{"D:\\Web Developement\\bitschat\\bitschat\\src\\index.js":"1","D:\\Web Developement\\bitschat\\bitschat\\src\\reportWebVitals.js":"2","D:\\Web Developement\\bitschat\\bitschat\\src\\reducer.js":"3","D:\\Web Developement\\bitschat\\bitschat\\src\\StateProvider.js":"4","D:\\Web Developement\\bitschat\\bitschat\\src\\App.js":"5","D:\\Web Developement\\bitschat\\bitschat\\src\\Login.js":"6","D:\\Web Developement\\bitschat\\bitschat\\src\\Sidebar.js":"7","D:\\Web Developement\\bitschat\\bitschat\\src\\Chat.js":"8","D:\\Web Developement\\bitschat\\bitschat\\src\\firebase.js":"9","D:\\Web Developement\\bitschat\\bitschat\\src\\SidebarChat.js":"10"},{"size":690,"mtime":1612874170842,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":433,"mtime":1612874184897,"results":"14","hashOfConfig":"12"},{"size":382,"mtime":1612874228843,"results":"15","hashOfConfig":"12"},{"size":712,"mtime":1613981815797,"results":"16","hashOfConfig":"12"},{"size":1026,"mtime":1612876657051,"results":"17","hashOfConfig":"12"},{"size":2098,"mtime":1613983735989,"results":"18","hashOfConfig":"12"},{"size":4264,"mtime":1613884486210,"results":"19","hashOfConfig":"12"},{"size":839,"mtime":1613210058473,"results":"20","hashOfConfig":"12"},{"size":1400,"mtime":1613982671304,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tjvrz1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Developement\\bitschat\\bitschat\\src\\index.js",[],["45","46"],"D:\\Web Developement\\bitschat\\bitschat\\src\\reportWebVitals.js",[],"D:\\Web Developement\\bitschat\\bitschat\\src\\reducer.js",[],"D:\\Web Developement\\bitschat\\bitschat\\src\\StateProvider.js",[],"D:\\Web Developement\\bitschat\\bitschat\\src\\App.js",["47"],"D:\\Web Developement\\bitschat\\bitschat\\src\\Login.js",[],"D:\\Web Developement\\bitschat\\bitschat\\src\\Sidebar.js",["48"],"import './Sidebar.css';\r\nimport  {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SidebarChat from './SidebarChat'\r\nimport {useState, useEffect} from 'react';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar(){\r\n    const[rooms, setRooms] = useState([]);\r\n    const[{ user}, dispatch] = useStateValue();\r\n\r\n    useEffect(()=> {\r\n        const unsubscribe = db.collection('rooms')\r\n        .orderBy('pr','asc')\r\n        .onSnapshot(snapshot=> (\r\n                setRooms(snapshot.docs.map(doc=>({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })\r\n            ))\r\n        ))\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n            },[])\r\n\r\nreturn( \r\n        <div className=\"sidebar\"> \r\n            <div className = 'sidebar_header'>\r\n            <Avatar src = {user?.photoURL}/>\r\n            <div className='sidebar_headerRight'>\r\n                <IconButton>\r\n                    <DonutLargeIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ChatIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <MoreVertIcon/>\r\n                </IconButton>    \r\n            </div>\r\n            </div>\r\n            <div className='sidebar_search'>\r\n                <div className = 'sidebar_searchContainer'>\r\n                <IconButton>\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n                <input placeholder='Search'></input>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='sidebar_chats'>\r\n            <SidebarChat addNewChat/>\r\n            {rooms.map(room =>(\r\n                <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n            ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;\r\n\r\n","D:\\Web Developement\\bitschat\\bitschat\\src\\Chat.js",["49"],"//Put source in line 10 for Avatar\r\nimport React from 'react'\r\nimport {Avatar, IconButton} from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport './Chat.css'\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Chat() {\r\n    const [input,setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms')\r\n            .doc(roomId)\r\n            .onSnapshot((snapshot) => setRoomName\r\n            (snapshot.data().name));\r\n        \r\n            db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy('timestamp', 'asc')\r\n            .onSnapshot((snapshot)=> \r\n                    setMessages(snapshot.docs.map((doc) =>\r\n                    doc.data()))\r\n                \r\n                    );\r\n                }\r\n    }, [roomId] )\r\n\r\n    const sendMessage = (e) =>{\r\n        e.preventDefault();\r\n        console.log('User:');\r\n        console.log(input);\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            email: user.email,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput(\"\");\r\n\r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n        (<div className='Chat'>\r\n\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://ui-avatars.com/api/?name=${roomName}`}/>\r\n                \r\n                <div className='chat_headerInfo'>\r\n                    <h3>{roomName}</h3>\r\n                </div> \r\n                <div className='chat_headerRight'>\r\n                    <IconButton>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFileIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat_body\">\r\n                {messages.map((message) =>(\r\n                    <p className = {`chat_message ${message.email === user.email && `chat_reciever`}`}>\r\n                <span className = 'chat_name'>~{message.name}</span>\r\n                    {message.message}  \r\n                <span className = 'chat_timestamp'>{new Date(message.timestamp?.toDate()).toUTCString()}\r\n                </span>\r\n                </p>\r\n                ))}\r\n                \r\n                {/*<p className = {`chat_message ${false && `chat_reciever`}`}>\r\n                <span className = 'chat_name'>~Arjun</span>\r\n                    High?  \r\n                <span className = 'chat_timestamp'>4:22AM</span>\r\n                </p>*/}\r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                <IconButton>\r\n                    <InsertEmoticonIcon/>\r\n\r\n                </IconButton>\r\n            <form>\r\n                <input \r\n                    value={input} \r\n                    className='send_message' \r\n                    onChange={e => setInput(e.target.value)} \r\n                    type=\"text\"\r\n                    placeholder = \"Type a message\"\r\n                />\r\n            <button onClick={sendMessage} type='submit'>\r\n            <IconButton>\r\n                <SendIcon/>\r\n            </IconButton>\r\n            </button>\r\n            </form>\r\n                <IconButton>\r\n                    <MicIcon className=\"micIcon\"/>\r\n                </IconButton> \r\n            </div>\r\n             \r\n        </div>)\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\n","D:\\Web Developement\\bitschat\\bitschat\\src\\firebase.js",[],"D:\\Web Developement\\bitschat\\bitschat\\src\\SidebarChat.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":10,"column":18,"nodeType":"56","messageId":"57","endLine":10,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":14,"column":20,"nodeType":"56","messageId":"57","endLine":14,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":22,"column":20,"nodeType":"56","messageId":"57","endLine":22,"endColumn":28},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]